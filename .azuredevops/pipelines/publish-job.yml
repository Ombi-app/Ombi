
variables:
  - template: templates/variables.yml

stages:
- stage: build
  jobs:
  - job: Build
    pool: TestPipeline
    steps:
    - template: templates/build-steps.yml

- stage: publish
  jobs:
  - job:
    strategy:
      matrix:
        linux-x64:
          runtime: linux-x64
          format: tar.gz
          compression: tar
    pool: TestPipeline
    steps:
      - template: templates/publish-os-steps.yml

- stage: deploy
  jobs:
  - job:
    condition: and(succeeded(), eq(variables.isMain, true))
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        targetPath: '$(System.ArtifactsDirectory)'

    - task: PowerShell@2
      displayName: 'Get Release Notes'
      inputs:
        targetType: 'inline'
        script: |
          $response = Invoke-WebRequest -Uri "https://ombireleasenote.azurewebsites.net/api/ReleaseNotesFunction?buildId=$(Build.BuildId)"
          Write-Host "##vso[task.setvariable variable=ReleaseNotes;]$response"

    # - task: GitHubRelease@1
    #   inputs:
    #     gitHubConnection: 'github.com_tidusjar'
    #     repositoryName: 'tidusjar/Ombi'
    #     action: 'create'
    #     target: '$(Build.SourceVersion)'
    #     tagSource: 'userSpecifiedTag'
    #     tag: '$(gitTag)'
    #     isDraft: true
    #     changeLogCompareToRelease: 'lastNonDraftRelease'
    #     changeLogType: 'commitBased'

    #- task: GitHubRelease@1
    #  inputs:
    #    gitHubConnection: 'github.com_tidusjar'
    #    repositoryName: 'tidusjar/Ombi.Releases'
    #    action: 'create'
    #    target: 'c7fcbb77b58aef1076d635a9ef99e4374abc8672'
    #    tagSource: 'userSpecifiedTag'
    #    tag: '$(gitTag)'
    #    releaseNotesSource: 'inline'
    #    releaseNotesInline: '$(ReleaseNotes)'
    #    assets: |
    #      $(System.ArtifactsDirectory)/**/*.zip
    #      $(System.ArtifactsDirectory)/**/*.tar.gz
    #    isPreRelease: true
    #    changeLogCompareToRelease: 'lastNonDraftRelease'
    #    changeLogType: 'commitBased'
  - deployment: VMDeploy
    displayName: web
    environment:
      name:  Test1
      resourceType: VirtualMachine
    strategy:
        runOnce:
          deploy:
            steps:
            - script: tar xvf /home/azure/azagent/_work/1/linux-x64/linux-x64.tar.gz -C /home/azure/azagent/_work/1/linux-x64/ && sudo systemctl stop ombi && cp -R /home/azure/azagent/_work/1/linux-x64/* /opt/ombi && sudo systemctl start ombi